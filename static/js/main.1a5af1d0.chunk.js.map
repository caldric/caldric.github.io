{"version":3,"sources":["components/AboutMe.tsx","projects.ts","components/Projects.tsx","skills.ts","components/Skills.tsx","components/Home.tsx","components/NavComponent.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AboutMe","className","id","bottom","distance","src","alt","projects","name","description","imgSrc","github","Projects","map","project","index","key","skills","Skills","cascade","skill","Home","NavComponent","Navbar","bg","variant","Nav","Brand","as","Link","to","Header","delay","target","download","Footer","href","rel","App","useState","scrollY","setScrollY","handleScroll","window","useEffect","addEventListener","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sZA2BeA,G,MAtBW,WACxB,OACE,6BAASC,UAAU,wBAAwBC,GAAG,YAC5C,yBAAKD,UAAU,aACb,kBAAC,IAAD,CAAME,QAAM,EAACC,SAAU,OACrB,yBAAKC,IAAI,WAAWC,IAAI,gBAAgBL,UAAU,oBAEpD,kBAAC,IAAD,CAAME,QAAM,GACV,wCACA,uBAAGF,UAAU,mBAAb,oSCNJM,G,MAAsB,CAC1B,CACEL,GAAI,EACJM,KAAM,qBACNC,YACE,ycACFC,OAAQ,wBACRC,OAAQ,uCAEV,CACET,GAAI,EACJM,KAAM,aACNC,YACE,uQACFC,OAAQ,mBACRC,OAAQ,gDAEV,CACET,GAAI,EACJM,KAAM,YACNC,YACE,yMACFC,OAAQ,kBACRC,OAAQ,wCAEV,CACET,GAAI,EACJM,KAAM,cACNC,YACE,mEACFC,OAAQ,kBACRC,OAAQ,4CCQGC,EAxCY,WACzB,OACE,yBAAKV,GAAG,YACN,yBAAKD,UAAU,aACb,wBAAIA,UAAU,uBACbM,EAASM,KAAI,SAACC,EAASC,GAAV,OACZ,yBAAKd,UAAU,UAAUe,IAAKF,EAAQZ,IACpC,yBAAKD,UAAU,kBACb,kBAAC,IAAD,CAAME,QAAM,EAACC,SAAU,OACrB,yBACEH,UACEc,EAAQ,IAAM,EAAI,sBAAwB,YAG5C,wBAAId,UAAU,sBAAsBa,EAAQN,MAC5C,uBAAGP,UAAU,QAAQa,EAAQL,eAGjC,kBAAC,IAAD,KACE,yBACER,UACEc,EAAQ,IAAM,EAAI,sBAAwB,YAG5C,yBACEd,UAAU,kBACVI,IAAKS,EAAQJ,OACbJ,IAAG,UAAKQ,EAAQN,KAAb,iBAKX,wBAAIP,UAAU,8BClCpBgB,G,MAAmB,CACvB,CACET,KAAM,aACNE,OAAQ,oBAEV,CACEF,KAAM,aACNE,OAAQ,oBAEV,CACEF,KAAM,QACNE,OAAQ,eAEV,CACEF,KAAM,OACNE,OAAQ,cAEV,CACEF,KAAM,SACNE,OAAQ,gBAEV,CACEF,KAAM,UACNE,OAAQ,iBAEV,CACEF,KAAM,QACNE,OAAQ,eAEV,CACEF,KAAM,aACNE,OAAQ,oBAEV,CACEF,KAAM,UACNE,OAAQ,gBAEV,CACEF,KAAM,aACNE,OAAQ,iBAEV,CACEF,KAAM,WACNE,OAAQ,eAEV,CACEF,KAAM,OACNE,OAAQ,cAEV,CACEF,KAAM,MACNE,OAAQ,aAEV,CACEF,KAAM,SACNE,OAAQ,gBAEV,CACEF,KAAM,YACNE,OAAQ,mBAEV,CACEF,KAAM,MACNE,OAAQ,aAEV,CACEF,KAAM,SACNE,OAAQ,gBAEV,CACEF,KAAM,MACNE,OAAQ,aAEV,CACEF,KAAM,SACNE,OAAQ,gBAEV,CACEF,KAAM,QACNE,OAAQ,eAEV,CACEF,KAAM,SACNE,OAAQ,gBAEV,CACEF,KAAM,MACNE,OAAQ,eCxDGQ,EA7BA,WACb,OACE,yBAAKhB,GAAG,QAAQD,UAAU,SACxB,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAME,QAAM,GACV,wBAAIF,UAAU,oBAAd,UAEF,kBAAC,IAAD,CAAME,QAAM,EAACgB,SAAO,EAACf,SAAU,OAC7B,yBAAKH,UAAU,OACZgB,EAAOJ,KAAI,SAACO,GAAD,OACV,yBACEnB,UAAU,mCACVe,IAAKI,EAAMZ,MAEX,yBACEP,UAAU,YACVI,IAAKe,EAAMV,OACXJ,IAAKc,EAAMZ,OAEb,uBAAGP,UAAU,cAAcmB,EAAMZ,eCVlCa,EAVQ,WACrB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,gCCmBSC,EAvBgB,WAC7B,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOxB,UAAU,YAAYC,GAAG,UACxD,kBAACwB,EAAA,EAAD,CAAKzB,UAAU,mBACb,kBAACsB,EAAA,EAAOI,MAAR,CAAcC,GAAIC,WAAMC,GAAG,QAA3B,iBAGA,kBAACJ,EAAA,EAAD,CAAKzB,UAAU,WACb,kBAACyB,EAAA,EAAIG,KAAL,CAAUD,GAAIC,WAAMC,GAAG,aAAvB,SAGA,kBAACJ,EAAA,EAAIG,KAAL,CAAUD,GAAIC,WAAMC,GAAG,aAAvB,YAGA,kBAACJ,EAAA,EAAIG,KAAL,CAAUD,GAAIC,WAAMC,GAAG,UAAvB,aCQKC,G,MAvBU,WACvB,OACE,4BAAQ7B,GAAG,OACT,kBAAC,IAAD,CAAMC,QAAM,GACV,wBAAIF,UAAU,eAAd,qBAEF,kBAAC,IAAD,CAAME,QAAM,EAAC6B,MAAO,KAClB,uBAAG/B,UAAU,SAAb,sBAEF,kBAAC,IAAD,CAAM+B,MAAO,KACX,kBAAC,OAAD,CACE/B,UAAU,eACV6B,GAAG,6BACHG,OAAO,SACPC,UAAQ,GAJV,uBC2BOC,G,MAxCA,WACb,OACE,4BAAQlC,UAAU,mBAChB,6BACA,uBAAGA,UAAU,eACX,uBACEmC,KAAK,6BACLH,OAAO,SACPI,IAAI,uBAEJ,yBACEpC,UAAU,gBACVI,IAAI,eACJC,IAAI,yBAGR,uBACE8B,KAAK,uCACLH,OAAO,SACPI,IAAI,uBAEJ,yBACEpC,UAAU,gBACVI,IAAI,iBACJC,IAAI,2BAGR,uBACE8B,KAAK,2BACLH,OAAO,SACPI,IAAI,uBAEJ,yBAAKpC,UAAU,gBAAgBI,IAAI,aAAaC,IAAI,iBAGxD,yFCASgC,EAzBO,WAAO,IAAD,EACIC,mBAAS,GADb,mBACnBC,EADmB,KACVC,EADU,KAGpBC,EAAe,WACnBD,EAAWE,OAAOH,UAOpB,OAJAI,qBAAU,WACRD,OAAOE,iBAAiB,SAAUH,KACjC,IAGD,6BACGF,EAAU,IAAM,kBAAC,EAAD,MAAmB,KACpC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,QAGJ,kBAAC,EAAD,QCrBcC,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,gBAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1a5af1d0.chunk.js","sourcesContent":["import React from 'react';\n//@ts-ignore\nimport Fade from 'react-reveal/Fade';\nimport './AboutMe.css';\n\nconst AboutMe: React.FC = () => {\n  return (\n    <section className=\"jumbotron text-center\" id=\"about-me\">\n      <div className=\"container\">\n        <Fade bottom distance={'20%'}>\n          <img src=\"./me.png\" alt=\"Claude Aldric\" className=\"personal-photo\" />\n        </Fade>\n        <Fade bottom>\n          <h2>About Me</h2>\n          <p className=\"lead text-muted\">\n            I am a lifelong learner who rapidly assimilates complex concepts and\n            strives for absolute excellence in my craft. I automatically\n            deconstruct and rebuild every idea or system I encounter while\n            asking questions like, “What is important,” or “Can this be\n            improved?”\n          </p>\n        </Fade>\n      </div>\n    </section>\n  );\n};\n\nexport default AboutMe;\n","export interface Project {\n  id: number;\n  name: string;\n  description: string;\n  imgSrc: string;\n  github: string;\n}\n\nconst projects: Project[] = [\n  {\n    id: 1,\n    name: 'COVID-19 Dashboard',\n    description:\n      'A responsive U.S. COVID-19 dashboard showing the total confirmed SARS-CoV-2 infected cases and deaths; total confirmed and deaths by state; U.S. choropleth map timeline from February to the most recent day; and an SIR (Susceptible-Infected-Recovered) mathematical model and fit. The website was built using HTML, CSS, JavaScript, and jQuery; the data was obtained through external APIs; and the SIR model was built using Python, NumPy, Pandas, and SciPy.',\n    imgSrc: './covid_dashboard.png',\n    github: 'https://github.com/caldric/COVID-19',\n  },\n  {\n    id: 2,\n    name: 'Battleship',\n    description:\n      'Battleship is a clone of the strategy game of the same name built with the MERN (MongoDB, Express.js, React.js, Node.js) stack and Bootstrap with two other collaborators. Our team adopted the Agile Scrum framework with Jira where I served as the Product Owner.',\n    imgSrc: './battleship.png',\n    github: 'https://github.com/caldric/battleship-client',\n  },\n  {\n    id: 3,\n    name: 'Pragmatic',\n    description:\n      'Pragmatic is an agile project management app modeled after Jira and made with the following technologies: Node.js, Express.js, EJS (Embedded JavaScript), jQuery, MongoDB, CSS, Bootstrap, and Heroku.',\n    imgSrc: './pragmatic.png',\n    github: 'https://github.com/caldric/pragmatic',\n  },\n  {\n    id: 4,\n    name: 'Tic Tac Toe',\n    description:\n      'A Tic Tac Toe clone made with HTML, CSS, JavaScript, and jQuery.',\n    imgSrc: './pragmatic.png',\n    github: 'https://github.com/caldric/tic-tac-toe',\n  },\n];\n\nexport { projects };\n","import React from 'react';\nimport './Projects.css';\n//@ts-ignore\nimport Fade from 'react-reveal/Fade';\n\nimport { projects } from '../projects';\n\nconst Projects: React.FC = () => {\n  return (\n    <div id=\"projects\">\n      <div className=\"container\">\n        <hr className=\"featurette-divider\" />\n        {projects.map((project, index) => (\n          <div className=\"project\" key={project.id}>\n            <div className=\"row featurette\">\n              <Fade bottom distance={'20%'}>\n                <div\n                  className={\n                    index % 2 === 1 ? 'col-md-7 order-md-2' : 'col-md-7'\n                  }\n                >\n                  <h3 className=\"featurette-heading\">{project.name}</h3>\n                  <p className=\"lead\">{project.description}</p>\n                </div>\n              </Fade>\n              <Fade>\n                <div\n                  className={\n                    index % 2 === 1 ? 'col-md-5 order-md-1' : 'col-md-5'\n                  }\n                >\n                  <img\n                    className=\"project-preview\"\n                    src={project.imgSrc}\n                    alt={`${project.name} project`}\n                  />\n                </div>\n              </Fade>\n            </div>\n            <hr className=\"featurette-divider\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","export interface Skills {\n  name: string;\n  imgSrc: string;\n}\n\nconst skills: Skills[] = [\n  {\n    name: 'TypeScript',\n    imgSrc: './typescript.svg',\n  },\n  {\n    name: 'JavaScript',\n    imgSrc: './javascript.svg',\n  },\n  {\n    name: 'HTML5',\n    imgSrc: './html5.svg',\n  },\n  {\n    name: 'CSS3',\n    imgSrc: './css3.svg',\n  },\n  {\n    name: 'Python',\n    imgSrc: './python.svg',\n  },\n  {\n    name: 'MongoDB',\n    imgSrc: './mongodb.svg',\n  },\n  {\n    name: 'MySQL',\n    imgSrc: './mysql.svg',\n  },\n  {\n    name: 'PostgreSQL',\n    imgSrc: './postgresql.svg',\n  },\n  {\n    name: 'Node.js',\n    imgSrc: './nodejs.svg',\n  },\n  {\n    name: 'Express.js',\n    imgSrc: './express.svg',\n  },\n  {\n    name: 'React.js',\n    imgSrc: './react.svg',\n  },\n  {\n    name: 'Yarn',\n    imgSrc: './yarn.svg',\n  },\n  {\n    name: 'NPM',\n    imgSrc: './npm.svg',\n  },\n  {\n    name: 'jQuery',\n    imgSrc: './jquery.svg',\n  },\n  {\n    name: 'Bootstrap',\n    imgSrc: './bootstrap.svg',\n  },\n  {\n    name: 'Git',\n    imgSrc: './git.svg',\n  },\n  {\n    name: 'GitHub',\n    imgSrc: './github.svg',\n  },\n  {\n    name: 'AWS',\n    imgSrc: './aws.svg',\n  },\n  {\n    name: 'Heroku',\n    imgSrc: './heroku.svg',\n  },\n  {\n    name: 'Slack',\n    imgSrc: './slack.svg',\n  },\n  {\n    name: 'VSCode',\n    imgSrc: './vscode.svg',\n  },\n  {\n    name: 'Vim',\n    imgSrc: './vim.svg',\n  },\n];\n\nexport { skills };\n","import React from 'react';\nimport './Skills.css';\n//@ts-ignore\nimport Fade from 'react-reveal/Fade';\n\nimport { skills } from '../skills';\n\nconst Skills = () => {\n  return (\n    <div id=\"tools\" className=\"album\">\n      <div className=\"container\">\n        <Fade bottom>\n          <h2 className=\"text-center mb-5\">Tools</h2>\n        </Fade>\n        <Fade bottom cascade distance={'50%'}>\n          <div className=\"row\">\n            {skills.map((skill) => (\n              <div\n                className=\"col-lg-2 col-md-3 col-sm-4 skill\"\n                key={skill.name}\n              >\n                <img\n                  className=\"skill-img\"\n                  src={skill.imgSrc}\n                  alt={skill.name}\n                />\n                <p className=\"text-muted\">{skill.name}</p>\n              </div>\n            ))}\n          </div>\n        </Fade>\n      </div>\n    </div>\n  );\n};\n\nexport default Skills;\n","import React from 'react';\n\nimport AboutMe from './AboutMe';\nimport Projects from './Projects';\nimport Skills from './Skills';\n\nconst Home: React.FC = () => {\n  return (\n    <div>\n      <AboutMe />\n      <Projects />\n      <Skills />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport './NavComponent.css';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nconst NavComponent: React.FC = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" className=\"fixed-top\" id=\"navbar\">\n      <Nav className=\"container-fluid\">\n        <Navbar.Brand as={Link} to=\"#top\">\n          Claude Aldric\n        </Navbar.Brand>\n        <Nav className=\"ml-auto\">\n          <Nav.Link as={Link} to=\"#about-me\">\n            About\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"#projects\">\n            Projects\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"#tools\">\n            Tools\n          </Nav.Link>\n        </Nav>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n//@ts-ignore\nimport Fade from 'react-reveal/Fade';\nimport './Header.css';\n\nconst Header: React.FC = () => {\n  return (\n    <header id=\"top\">\n      <Fade bottom>\n        <h1 className=\"text-center\">Claude V. Aldric</h1>\n      </Fade>\n      <Fade bottom delay={1000}>\n        <p className=\"title\">Software Engineer</p>\n      </Fade>\n      <Fade delay={2000}>\n        <Link\n          className=\"btn btn-info\"\n          to=\"./resume_aldric_claude.pdf\"\n          target=\"_blank\"\n          download\n        >\n          Download Resume\n        </Link>\n      </Fade>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n  return (\n    <footer className=\"container-fluid\">\n      <hr />\n      <p className=\"float-right\">\n        <a\n          href=\"https://github.com/caldric\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"contact-icons\"\n            src=\"./github.svg\"\n            alt=\"GitHub contact icon\"\n          />\n        </a>\n        <a\n          href=\"https://www.linkedin.com/in/caldric/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"contact-icons\"\n            src=\"./linkedin.svg\"\n            alt=\"LinkedIn contact icon\"\n          />\n        </a>\n        <a\n          href=\"mailto:claude@aldric.dev\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img className=\"contact-icons\" src=\"./mail.svg\" alt=\"Email icon\" />\n        </a>\n      </p>\n      <p>© Copyright 2020 Claude Aldric. All rights reserved.</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// React & Bootstrap\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Components\nimport Home from './components/Home';\nimport Projects from './components/Projects';\nimport NavComponent from './components/NavComponent';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst App: React.FC = () => {\n  const [scrollY, setScrollY] = useState(0);\n\n  const handleScroll = () => {\n    setScrollY(window.scrollY);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <div>\n      {scrollY > 400 ? <NavComponent /> : null}\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}